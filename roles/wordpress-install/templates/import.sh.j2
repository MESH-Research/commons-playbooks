#!/bin/sh

## Copy restore files from off-site backup and replace local version.

# Configuration.
current_date=`date +%Y%m%d`
fqdn=`hostname -f`

# Define restore files.
mysql_s3_restore_file="s3://mla-backup/commons/db/daily/commons-db_$current_date.sql.gz"
wordpress_s3_restore_file="s3://mla-backup/commons/www/daily/commons-www_$current_date.tar.gz"

# Copy restore files.
echo "Downloading restore files...."
aws s3 cp $wordpress_s3_restore_file /tmp/wordpress.backup.tar.gz
aws s3 cp $mysql_s3_restore_file /tmp/mysql.backup.sql.gz

# Extract wp-content directory from backup.
echo "Extracting web files...."
tar -C /srv/www/commons/current/web/app/ --strip-components=3 -xvzf /tmp/wordpress.backup.tar.gz ./public/wp-content/blogs.dir ./public/wp-content/uploads
sudo chown -R {{ web_user }}:{{ web_group }} /srv/www/commons/current/web/app/blogs.dir /srv/www/commons/current/web/app/uploads

# Extract database backup and replace existing database.
echo "Loading database backup...."
gunzip -c /tmp/mysql.backup.sql.gz | mysql {{ wordpress_sites.commons.env.db_name }}

# Update .env file to use development domain.
echo "Updating project environment...."
sed -i "s/commons.mla.org/$fqdn/g" /srv/www/commons/current/.env

# Update nginx configuration to use development domain.
echo "Updating nginx configuration...."
for file in /etc/nginx/sites-available/*.conf; do
  sudo sed -i "s/commons.mla.org/$fqdn/g" $file
done
sudo service nginx reload

# Update database to use development domain.
echo "Updating database...."
wp search-replace --skip-columns=guid --network --url="commons.mla.org" --path="/srv/www/commons/current/web/wp" "commons.mla.org" "$fqdn"
